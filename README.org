#+TITLE: Advent of Code

*[[file:src/Y2020/][List of 2020 Solutions]]*

* Status

| Year | Stars | Complete? |
|------+-------+-----------|
| 2020 | 34★   |           |
| 2019 | *50★* | X         |
| 2018 | 28★   |           |
| 2017 | 00★   |           |
| 2016 | 00★   |           |
| 2015 | 00★   |           |

* Usage

#+BEGIN_SRC shell
stack install

stack exec aoc 2020 01    # Execute the given day.
stack exec aoc 2020 last  # Execute the most recent day with a source file.
stack exec aoc 2020 all   # Execute every day with a source file.
#+END_SRC

* Notes

In the greatest of hackathon traditions, these solutions follow the Easiest
Thing That Works™ methodology.

* Creating a new Day source file

** Download input file into =data/inputs/=

This file should have a two digit filename, with no extension. The input file
must exist, even if then problem doesn't supply one.

** Create a new =Day01.hs= file in =src/=
** Update =days= export in =src/Days.hs=

I would prefer if this were automated, but that will be a TODO for now.

#+BEGIN_SRC haskell
module Y2020.Day01 (parts) where

parts = ( (part1, Nothing)
        , (part2, Nothing)
        , id
        )

part1 :: a -> String
part1 input = ""

part2 :: a -> String
part2 input = ""
#+END_SRC
