#+TITLE: Advent of Code

*[[file:src/Y2021/][List of 2021 Solutions]]*

* Status

| Year | Stars | Complete? |
|------+-------+-----------|
| 2021 |  02★  |           |
| 2020 | *50★* |     ✔     |
| 2019 | *50★* |     ✔     |
| 2018 |  28★  |           |
| 2017 |  00★  |           |
| 2016 |  00★  |           |
| 2015 |  00★  |           |

* Usage

#+BEGIN_SRC shell
stack install

stack run 2021 01    # Execute the given day.
stack run 2021 last  # Execute the most recent day with a source file.
stack run 2021 all   # Execute every day with a source file.

stack --profile run 2021 01 -- +RTS -p -RTS # Profile the given day.
#+END_SRC

* Notes

In the greatest of hackathon traditions, these solutions follow the Easiest
Thing That Works™ methodology.

* Creating a new Day source file

** Download input file into =data/inputs/=

This file should have a two digit filename, with no extension. The input file
must exist, even if then problem doesn't supply one.

** Create a new =Day01.hs= file in =src/=
** Update =days= export in =src/Days.hs=

I would prefer if this were automated, but that will be a TODO for now.

#+BEGIN_SRC haskell
  module Y2021.Day01 (parts) where

  parts = ( (part1, Nothing)
          , (part2, Nothing)
          , id
          )

  part1 :: a -> String
  part1 input = ""

  part2 :: a -> String
  part2 input = ""
#+END_SRC
